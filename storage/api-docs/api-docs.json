{
    "openapi": "3.0.0",
    "info": {
        "title": "Post Management API",
        "description": "A robust and versatile API for managing blog posts, featuring both public and private routes. This API enables users to create, read, update, and delete posts, with secure authentication and role-based access control. Ideal for demonstrating API development and RESTful principles in Laravel.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost/laravel-api-restful/public"
        },
        {
            "url": {
                "v1": "/api/v1",
                "v2": "/api/v2"
            }
        }
    ],
    "paths": {
        "/api/v1/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Retrieve All Blog Posts",
                "description": "Fetch a comprehensive list of all blog posts. This endpoint supports pagination and returns an array of post objects with their respective details, ensuring efficient data retrieval and display.",
                "operationId": "74f5938736730f550751f0d7c8816511",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated array of blog posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a New Blog Post",
                "description": "Create a new blog post with the provided details. This endpoint requires authentication.",
                "operationId": "eeb9e53edc2cef8017d6ecf1685f7dcd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Post Title"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "new slug for the post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the content of the new post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully, return post_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        },
                                        "data": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized, you must log in first"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/posts/{post}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Retrieve a Single Blog Post",
                "description": "Fetch details of a specific blog post by its ID. This endpoint returns a detailed object representing the blog post.",
                "operationId": "20940eb08270948ec91e5f36556bb0d6",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an Existing Blog Post",
                "description": "Update an existing blog post with the provided details. This endpoint requires authentication.",
                "operationId": "5ec78c99648b047b73ae045b179d173e",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Post Title"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-post-title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the updated content of the post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized, you must log in first"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a Blog Post",
                "description": "Delete a blog post by its ID. This endpoint requires authentication.",
                "operationId": "c35f2c2bdd941d33a84a2347def490e3",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Post deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized, you must log in first"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v2/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Retrieve All Blog Posts",
                "description": "Fetch a comprehensive list of all blog posts. This endpoint supports pagination and returns an array of post objects with their respective details, ensuring efficient data retrieval and display.",
                "operationId": "b76f124c1efb3e86e7a1e3656a811c66",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated array of blog posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PostResource": {
                "title": "Post",
                "description": "Post resource",
                "properties": {
                    "title": {
                        "description": "Title of the Post",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug for the Post",
                        "type": "string"
                    },
                    "excerpt": {
                        "description": "Excerpt of the Post",
                        "type": "string"
                    },
                    "content": {
                        "description": "Content of the Post",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter the token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}